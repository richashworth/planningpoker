buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'net.researchgate.release' version '2.3.4'
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

jar {
    baseName = 'planningpoker'
    manifest {
        attributes 'Implementation-Version': version
    }
}

springBoot {
    executable = true
}

repositories {
    jcenter()
}

sourceCompatibility = 1.6

ext['tomcat.version'] = '7.0.59' // needed for Java 6 compatibility

dependencies {
    compile 'com.google.guava:guava:19.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.jetbrains:annotations-java5:15.0'
    compile 'org.projectlombok:lombok:1.16.6'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework:spring-messaging'
    compile 'net.bull.javamelody:javamelody-core:1.32.1'

    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

task stage(dependsOn: ["build"]) {}
